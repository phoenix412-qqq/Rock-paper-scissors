import random
import tkinter as tk
from tkinter import messagebox

def get_user_choice(choice):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    global user_choice
    user_choice = choice
    update_labels()

def get_computer_choice():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞."""
    choices = ["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"]
    return random.choice(choices)

def determine_winner():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—á–µ—Ç."""
    global computer_choice, winner, user_score, comp_score
    computer_choice = get_computer_choice()
    if user_choice == computer_choice:
        winner = "–ù–∏—á—å—è!"
    elif (user_choice == "–∫–∞–º–µ–Ω—å" and computer_choice == "–Ω–æ–∂–Ω–∏—Ü—ã") or \
         (user_choice == "–Ω–æ–∂–Ω–∏—Ü—ã" and computer_choice == "–±—É–º–∞–≥–∞") or \
         (user_choice == "–±—É–º–∞–≥–∞" and computer_choice == "–∫–∞–º–µ–Ω—å"):
        winner = "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!"
        user_score += 1
    else:
        winner = "–ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∏–≥—Ä–∞–ª!"
        comp_score += 1
    update_labels()
    score_label.config(text=f"–°—á–µ—Ç: –í—ã - {user_score}, –ö–æ–º–ø—å—é—Ç–µ—Ä - {comp_score}")

def update_labels():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –º–µ—Ç–∫–∞—Ö."""
    user_label.config(text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {user_choice}")
    comp_label.config(text=f"–ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±—Ä–∞–ª: {computer_choice}")
    result_label.config(text=winner)

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
window = tk.Tk()
window.title("–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
window.geometry("800x800") 

# –ó–∞–¥–∞–µ–º —Ñ–æ–Ω –æ–∫–Ω–∞
window.configure(bg="#4D4D4D") # –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω

# –ó–∞–ø—Ä–µ—â–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.resizable(False, False) 

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç
user_score = 0
comp_score = 0

# –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫–∏
user_label = tk.Label(window, text="–í—ã–±–µ—Ä–∏—Ç–µ:", font=("Arial", 16), bg="#4D4D4D", fg="#FFFFFF") # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
user_label.pack(pady=10)

# –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫
button_frame = tk.Frame(window, bg="#4D4D4D") 
button_frame.pack(pady=10)

# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ (—É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä)
rock_button = tk.Button(button_frame, text="–ö–∞–º–µ–Ω—å", command=lambda: get_user_choice("–∫–∞–º–µ–Ω—å"), width=15, height=3, bg="#1E90FF", fg="#4D4D4D")
rock_button.pack(side="left", padx=10)

paper_button = tk.Button(button_frame, text="–ë—É–º–∞–≥–∞", command=lambda: get_user_choice("–±—É–º–∞–≥–∞"), width=15, height=3, bg="#1E90FF", fg="#4D4D4D")
paper_button.pack(side="left", padx=10)

scissors_button = tk.Button(button_frame, text="–ù–æ–∂–Ω–∏—Ü—ã", command=lambda: get_user_choice("–Ω–æ–∂–Ω–∏—Ü—ã"), width=15, height=3, bg="#1E90FF", fg="#4D4D4D")
scissors_button.pack(side="left", padx=10)

# –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
comp_label = tk.Label(window, text="", font=("Arial", 35), bg="#4D4D4D", fg="#FFFFFF") # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
comp_label.pack(pady=10)

result_label = tk.Label(window, text="", font=("Arial", 35), bg="#4D4D4D", fg="#FFFFFF") # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
result_label.pack(pady=10)

# –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞
score_label = tk.Label(window, text=f"–°—á–µ—Ç: –í—ã - {user_score}, –ö–æ–º–ø—å—é—Ç–µ—Ä - {comp_score}", font=("Arial", 14), bg="#4D4D4D", fg="#FFFFFF") # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
score_label.pack(pady=5)

# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
play_button = tk.Button(window, text="–ò–≥—Ä–∞—Ç—åüß±‚úÇüìÉ", command=determine_winner, width=25, height=6, bg="#FFFAF0", fg="#4D4D4D") 
play_button.pack(pady=10)

# –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
window.mainloop()